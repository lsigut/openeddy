% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Plot_eddy.R
\name{plot_eddy}
\alias{plot_eddy}
\title{Plot Time Series of Eddy Covariance Data}
\usage{
plot_eddy(
  x,
  flux,
  qc_flag = "none",
  test = "none",
  flux_gf = "none",
  NEE_sep = FALSE,
  skip = c("none", "monthly", "weekly"),
  ylim = NULL,
  panel_top = c("T_light", "VPD_Rn", "H_err_var", "blue_red", "violet_orange"),
  panel_top_vars = NULL,
  panel_bottom = c("VPD_Rn", "T_light", "H_err_var", "blue_red", "violet_orange"),
  panel_bottom_vars = NULL,
  light = c("PAR", "GR"),
  GPP_scor = TRUE,
  document = TRUE
)
}
\arguments{
\item{x}{A data frame with column names representing required variables. See
'Details' below.}

\item{flux}{A character string. Specifies the column name in \code{x} with
flux values.}

\item{qc_flag}{A character string. Specifies the column name in \code{x} with
flux related quality control flag used for visualisation of data quality
and setting of y-axis range. If "none" is provided, all data will be used.
See 'Quality Control'.}

\item{test}{A character string. Specifies the column name in \code{x} with
quality control flag for visualisation of its effect on the data. If "none"
is provided, no visualisation will be done. See 'Quality Control'.}

\item{flux_gf}{A character string. Specifies the column name in \code{x} with
gap-filled flux values.}

\item{NEE_sep}{A logical value. Determines whether NEE separation should be
visualized. If \code{TRUE}, columns \code{"Reco"} and \code{"GPP"} are
expected in \code{x}.}

\item{skip}{A character string. Determines whether plotting should be done in
monthly (\code{skip = "weekly"}), weekly intervals (\code{skip =
"monthly"}) or both (\code{skip = "none"}).}

\item{ylim}{A numeric vector of length two or \code{NULL}. If \code{NULL}
(default), the treatment of y-axis limits in the figures with \code{flux}
values is fully automated. Otherwise, \code{ylim} sets the maximum range of
automatically computed y-axis limits. See 'Quality Control'.}

\item{panel_top}{A character string. Selects one of the available modules for
plotting additional variables. This module is displayed above the panel
with fluxes in weekly plots. Can be abbreviated. See 'Modules'.}

\item{panel_top_vars}{A character vector of length two or \code{NULL}.
Specifies two variables expected in \code{x} if \code{panel_top =
"blue_red"} or \code{"violet_orange"}, otherwise \code{NULL}.}

\item{panel_bottom}{A character string. Selects one of the available modules
for plotting additional variables. This module is displayed below the panel
with fluxes in weekly plots. Can be abbreviated. See 'Modules'.}

\item{panel_bottom_vars}{A character vector of length two or \code{NULL}.
Specifies two variables expected in \code{x} if \code{panel_bottom =
"blue_red"} or \code{"violet_orange"}, otherwise \code{NULL}.}

\item{light}{A character string. Required only for the \code{"T_light"}
module. Selects preferred variable for incoming light intensity.
\code{"PAR"} or \code{"GR"} is allowed. Can be abbreviated.}

\item{GPP_scor}{A logical value. Should sign correction of GPP be performed?
See Gap-filling and NEE separation section in Details. Ignored if
\code{NEE_sep = FALSE}.}

\item{document}{A logical value. If \code{TRUE}, values of \code{qc_flag} and
\code{test} arguments are documented in both monthly and weekly plots.}
}
\description{
Visualize flux measurements together with micrometeorological or other
related variables in monthly and weekly intervals. Missing values, scales of
axes and plotting regions are treated in an automated way.
}
\details{
The data frame \code{x} is expected to have certain properties. It is
required that it contains column named \code{"timestamp"} of class
\code{"POSIXt"} with regular sequence of date-time values, typically with
(half-)hourly time interval. Any missing values in \code{"timestamp"} are not
allowed. Thus, if no records exist for given date-time value, it still has to
be included. It also has to contain required (depends on the argument values
and applied modules) column names. If required auxiliary variable is not
available (e.g. \code{"Tair"}, \code{"PAR"}), it still has to be included in
\code{x} as a named column with \code{NA} values. The \code{x} column defined
by argument \code{flux} is the only one that has to contain at least one
non-missing value. If present, column \code{"P"} is expected to contain
precipitation.

If \code{skip = "weekly"}, minimum requirements for \code{x} column names are
\code{"timestamp"} and \code{flux}. If \code{skip = "none"} or
\code{"monthly"}, respective names specified in 'Modules' (see below) are
also required.

Variable names for plot labels are extracted from required column names of
\code{x}. Units are extracted from \code{x} if they are present as
\code{units} attributes of required columns. If missing, \code{"-"} string is
used instead.

Plotting is separated into two stages. Firstly, \code{flux} time-series data
are drawn in monthly intervals. Monthly plotting regions consist of four
figures on top of each other representing separately four consecutive months.
Secondly, if \code{skip = "none"} or \code{"monthly"}, \code{flux}
time-series data are drawn together with auxiliary data in weekly intervals.
Weekly plotting regions are described in 'Modules' section (see below).
}
\section{Modules}{
 Applies only if \code{skip = "none"} or \code{"monthly"}.
  Plotting of auxiliary variables in weekly intervals is simplified by using
  predefined modules. Their main purpose is to achieve well-arranged display
  of auxiliary variables. Weekly plotting regions consist of two figures
  representing separately two consecutive weeks. Each figure contains three
  panels on top of each other. The middle panel always contains the values
  from \code{flux} and, if present, \code{"P"} columns of \code{x}. Variables
  used in the upper and lower panel can be changed by \code{panel_top} and
  \code{panel_bottom}. These arguments specify the respective modules that
  will be loaded (can be the same) and thus also a certain set of required
  column names of \code{x} (variables).

  Available modules are: \itemize{ \item T_light: requires \code{"Tair"},
  \code{"Tsoil"} and selected \code{light} columns. \item VPD_Rn: requires
  \code{"VPD"} and \code{"Rn"} columns. \item H_err_var: requires
  \code{"rand_err_H"} and \code{"ts_var"} columns. \item blue_red: requires
  columns specified by \code{panel_top/bottom_vars}. \item violet_orange:
  requires columns specified by \code{panel_top/bottom_vars}.}

  Modules T_light, VPD_Rn and H_err_var have predefined color combinations
  and variables. Modules blue_red and violet_orange provide more flexibility
  as they only have predefined color combinations. Actual plotted variables
  are selected by additional argument (see above).
}

\section{Quality Control}{
 \code{qc_flag} and \code{test} relate to QC flags
  available for the specified \code{flux}. Only QC scheme using QC flag range
  0 - 2 is supported.

  Flags specified by \code{qc_flag} separate corresponding flux values to two
  groups. \emph{Used data} for flags 0 and 1 (black points) and
  \emph{Excluded data} for flags 2 and \code{NA} (grey points). The y-axis
  limits in the figures with \code{flux} values are based on \emph{Used data}
  only. If \code{qc_flag = "none"}, all data are \emph{Used data}. The time
  interval used for setting the range is one month both for monthly
  (respective month) and weekly (month centered on the respective week)
  plots. Additionally, maximum \code{ylim} range can be set for the figures
  with \code{flux} values (e.g. in case of large outliers).

  In order to emphasize \code{flux} values with lower quality, \code{test}
  can be specified. Values with QC flag = 1 have green center of the point.
  Values with QC flag = 2 or \code{NA} have red center of the point.

  NB: \code{flux} data with \code{NA} values are always \emph{Excluded data}
  and cannot be emphasized (\code{NA} values are not drawn).
}

\section{Gap-filling and NEE separation}{
 Gap-filled flux values can be
  displayed using \code{flux_gf} as a line overlaying the \code{flux} values.
  If \code{NEE_sep = TRUE}, columns \code{"Reco"} and \code{"GPP"} are
  expected in \code{x}. \code{GPP_scor} allows to change the sign convention
  of GPP to minimize lines overlay during plotting. CO2 uptake in
  \code{REddyProc} package is represented by positive GPP, thus, to optimize
  plotting, \code{GPP_scor = TRUE} is taken as default.
}

\section{Abbreviations}{
 \itemize{ \item H: Sensible heat flux [W m-2] \item
  NEE: Net Ecosystem Exchange [umol m-2 s-1] \item GPP: Gross Primary
  Production [umol m-2 s-1] \item Reco: Ecosystem Respiration [umol m-2 s-1]
  \item QC: Quality Control \item P: Precipitation [mm] \item PAR:
  Photosynthetic Active Radiation [umol m-2 s-1] \item GR: Global Radiation
  [W m-2] \item T: Temperature [degC] \item Tair: Air Temperature [degC]
  \item Tsoil: Soil Temperature [degC] \item VPD: Vapor Pressure Deficit
  [hPa] \item Rn: Net Radiation [W m-2] \item rand_err_H: random error of H
  [W m-2]; in plots abbreviated as H_re \item ts_var: sonic temperature
  variance [K2]}
}

\examples{
# prepare mock data
set.seed(87)
my_var <- sin(seq(pi / 2, 2.5 * pi, length = 48)) * 10
my_var[my_var > 5] <- 5
t <- seq(ISOdate(2020, 7, 1, 0, 15), ISOdate(2020, 7, 14, 23, 45), "30 mins")
P <- vector("numeric", 48 * 14)
P[c(180:188, 250:253, 360:366, 500:505)] <- sample(1:15, 26, replace = TRUE)
PAR <- (-my_var + 5) * 100
Tair <- Tsoil <- rep(-cos(seq(0, 2 * pi, length = 48)), 14)
Tair <- Tair * 2 + 15 + seq(0, 5, length = 48 * 14)
Tsoil <- Tsoil * 1.2 + 10 + seq(0, 3, length = 48 * 14)
VPD <- -my_var + 10
VPD <- VPD[c(43:48, 0:42)]
Rn <- PAR / 2 - 50

# combine into data frame
a <- data.frame(
  timestamp = t,
  my_var = my_var + rnorm(48 * 14),
  my_qc = sample(c(0:2, NA), 672, replace = TRUE, prob = c(5, 3, 2, 1)),
  P = P,
  PAR = PAR,
  Tair = Tair,
  Tsoil = Tsoil,
  VPD = VPD,
  Rn = Rn
)

# specify units
openeddy::units(a) <- c("-", "units", "-", "mm", "umol m-2 s-1", "degC",
                        "degC", "hPa", "W m-2")

# plot in weekly resolution (flux can be any variable)
plot_eddy(x = a, flux = "my_var", qc_flag = "my_qc", test = "my_qc",
skip = "monthly")

# test can be used to distinguish up to 3 groups (0-2 flagging scheme)
# - example with 2 groups:
a$day <- a$PAR > 0 # 2 groups (TRUE / FALSE; i.e. 1 / 0)
plot_eddy(a, "my_var", "my_qc", "day", skip = "monthly") # daytime is green
# - example with 3 groups:
a$Tair_levels <- cut(a$Tair, c(13, 16, 19, 22))
a$Tair_levels <- as.numeric(a$Tair_levels) - 1 # only flags 0-2 supported
plot_eddy(a, "my_var", "my_qc", "Tair_levels", skip = "monthly")

# make a custom setup of top and bottom panels
plot_eddy(x = a, flux = "my_var", qc_flag = "my_qc", test = "my_qc",
          skip = "monthly",
          panel_top = "blue_red", panel_top_vars = c("Tair", "Rn"),
          panel_bottom = "violet_orange", panel_bottom_vars = c("PAR", "VPD"))

# any time resolution is supported
b <- ex(a, c(TRUE, FALSE, FALSE, FALSE)) # two-hourly time resolution
plot_eddy(b, "my_var", "my_qc", "my_qc", skip = "monthly")

# Precipitation is treated specifically and can be missing
d <- a
d["P"] <- NULL
plot_eddy(d, "my_var", "my_qc", "my_qc", skip = "monthly")

}
\seealso{
\code{\link{read_eddy}} and \code{\link{strptime_eddy}}.
}
