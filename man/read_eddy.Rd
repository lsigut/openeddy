% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_handling.R
\name{read_eddy}
\alias{read_eddy}
\title{Data Input with Units}
\usage{
read_eddy(
  file,
  header = TRUE,
  units = TRUE,
  sep = ",",
  quote = "\\"",
  dec = ".",
  units_fill = "-",
  na.strings = c("NA", "-9999.0", "-9999"),
  colClasses = NA,
  nrows = -1,
  skip = 0,
  fill = TRUE,
  comment.char = "",
  check_input = TRUE,
  ...
)
}
\arguments{
\item{file}{The file name with input data to be read. It can be a file name
inside the current working directory, \emph{relative} or \emph{absolute}
path or \code{\link{connection}}. See \code{\link{read.table}} for more
detailed description. Connections to anonymous file or clipboard are not
allowed. To read from clipboard use \code{"clipboard"} string instead of
connection.}

\item{header}{A logical value indicating whether the names of variables are
included as the first line of the input file. If \code{FALSE}, column names
and variable names of attribute \code{varnames} will be automatically
generated.}

\item{units}{A logical value indicating whether the units for respective
variables are included one line above the data region in the input file. If
\code{FALSE}, the \code{units} attribute of each column will be set to
\code{units_fill} string representing missing values.}

\item{sep}{A character that separates the fields of input. Default separator
for CSV files is \code{","}. See \code{\link{read.table}} for other
options.}

\item{quote}{A character string that contains the quoting characters.}

\item{dec}{A character that specifies decimal mark used in the input.}

\item{units_fill}{A character string that represents missing value of
\code{units} attribute.}

\item{na.strings}{A character vector of strings representing \code{NA} values
in the input file. Blank fields are also considered to be missing values in
logical, integer, numeric and complex fields.}

\item{colClasses}{A character vector of classes to be assumed for the columns
and recycled as necessary. See \code{\link{read.table}} for more detailed
description.}

\item{nrows}{An integer specifying the maximum number of rows to read in.
Negative and other invalid values are ignored.}

\item{skip}{An integer. The number of lines to skip in the input file before
reading data.}

\item{fill}{A logical value. If set to \code{TRUE} (default), the rows that
have unequal length will be corrected with blank fields.}

\item{comment.char}{A character that is interpreted as comment or empty
string to turn off this behaviour.}

\item{check_input}{A logical value that determines if values in the input
will be checked for erroneous \code{"-10000"} value. If \code{TRUE}
(default), any encountered \code{"-10000"} value in the data will trigger
an error message.}

\item{...}{Further arguments to be passed to the internal \code{read.table}
function}
}
\value{
A data frame is produced with additional attributes \code{varnames}
and \code{units} assigned to each respective column.
}
\description{
Reads tabular data from a file and represents them as data frame. Attributes
\code{varnames} (representing variable names) and \code{units} (representing
units of measurement or space efficient metadata) are assigned to each
column.
}
\details{
\code{read_eddy} extends the possibilities of \code{\link{read.table}} so it
can also read units of measurement. However, it uses default arguments of
\code{\link{read.csv}} to accomodate loading of data for the most common
input type. \code{read_eddy} also sets useful defaults common for eddy
covariance (\emph{eddy}) data. Missing values are often reported as
\code{"-9999.0"} or \code{"-9999"} by post-processing software, therefore
\code{na.strings = c("NA", "-9999.0", "-9999")} is used as default.

Attribute \code{varnames} contains original variable name of respective
column without automated conversion that is done for column name. The main
purpose of \code{varnames} attribute is to provide control over conversion of
original column names and keep variable name of a vector when it is separated
from the original data frame.

Units are expected to be one line below the header in the input file. Instead
of units of measurement, it is possible to include any space efficient
metadata that is relevant to the respective variables. E.g. format of
timestamp or structure of coded variable. One line below units and further in
the input file is the region with data. Any missing values or blank fields
(converted to empty strings) in the line interpreted as units will be
substituted by \code{units_fill} string instead.

The automated check for \code{"-10000"} values in the data region is provided
by \code{check_input = TRUE} (default) and produces error message if the
value is found. The \code{"-10000"} values can be introduced to the dataset
by rounding \code{"-9999"} values due to the incorrect file conversion or
data manipulation. Using  \code{check_input = FALSE} will skip the check
(this could improve the performance for large input files).
}
\examples{
## Storing timestamp metadata (format) and unit of height.
xx <- read_eddy(text =
"timestamp,height
\%d.\%m.\%Y,m
24.1.2015,1.70
24.1.2016,1.72")
str(xx)
(varnames <- varnames(xx))
(units <- units(xx))

## Note that 'varnames' and 'units' attributes are dropped when you subset
## rows but unchanged if you subset columns:
str(xx[, 1])
str(yy <- xx[1, ])
varnames(yy) <- varnames
units(yy) <- units
str(yy)

## Computations with columns also drop 'varnames' and 'units' attributes:
xx$date <- as.Date(xx$timestamp, units(xx$timestamp))
str(xx)

## Varnames store the original header without automated conversions:
aa <- read_eddy(text =
"u*,(z-d)/L,x_70\%
m s-1,-,m
1.412908015,-4.05E-02,153.7963035")
str(aa)

## header = FALSE and units = FALSE:
bb <- read_eddy(header = FALSE, units = FALSE, text =
"24.1.2015,1.70
24.1.2016,1.72")
str(bb)

}
\seealso{
\code{\link{read.table}} for information about further arguments
passed to \code{read.table}.

\code{\link{write_eddy}} to save data frame with \code{units} attributes
specified for each column.
}
