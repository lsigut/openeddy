% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Plot_eddy.R
\name{ggplot_stats}
\alias{ggplot_stats}
\title{Create a New ggplot with Statistics}
\usage{
ggplot_stats(
  data,
  x,
  y,
  breaks = 20,
  circular = FALSE,
  qrange = c(0.005, 0.995),
  center = c("median", "mean"),
  deviation = c("mad", "sd"),
  header = TRUE
)
}
\arguments{
\item{data}{A data frame with required timestamp column
(\code{data$timestamp}) of class \code{"POSIXt"}.}

\item{x, y}{A character string. A \code{data} column name of the variable to
plot on x-axis (y-axis).}

\item{breaks}{An integer. Number of breakpoints separating variable \code{x}
to \code{breaks - 1} intervals.}

\item{circular}{A logical value. Is \code{x} a circular variable?}

\item{qrange}{A numeric vector of length 2, giving the quantile range of
y-axis.}

\item{center, deviation}{A character string. Statistics applied to each x-axis
interval for computation of its center (deviation) along y-axis.}

\item{header}{A logical value. Should automated plot title and subtitle be
included?}
}
\description{
Create a ggplot object representing a scatter plot with statistics for given
amount of intervals along x-axis. Each interval contains comparable amount of
data points, thus can have unequal width.
}
\details{
\code{circular = TRUE} effectively sets the last interval as neighboring to
the first interval. This allows to interpolate the statistics also for the
edge cases.

\code{qrange} reduces y-axis limits to reduce the impact of outliers on plot
readability. It does not affect computed statistics. If you do not want to
limit y-axis, set \code{qrange = NULL} or \code{qrange = c(0, 1)}.
}
\examples{
set.seed(123)
n <- 17520 # number of half-hourly records in one non-leap year
tstamp <- seq(c(ISOdate(2021,3,20)), by = "30 mins", length.out = n)
x <- data.frame(timestamp = tstamp,
                wd = seq(0,360, length.out = n),
                H = rf(n, 1, 2, 1))
openeddy::units(x) <- c("", "deg", "W m-2")
ggplot_stats(x, x = "wd", y = "H", qrange = c(0.005, 0.9))
ggplot_stats(x, x = "wd", y = "H", circular = TRUE, qrange = c(0.005, 0.9))

}
\seealso{
\code{\link{aggregate}}, \code{\link{as.POSIXlt}},
  \code{\link{cut.POSIXt}}, \code{\link{mean}}, \code{\link{regexp}},
  \code{\link{strftime}}, \code{\link{sum}}, \code{\link{timezones}},
  \code{\link{varnames}}
}
