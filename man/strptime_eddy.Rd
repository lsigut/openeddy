% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_handling.R
\name{strptime_eddy}
\alias{strptime_eddy}
\title{Conversion of Regular Date-time Sequence from Character}
\usage{
strptime_eddy(
  x,
  format = "\%Y-\%m-\%d \%H:\%M",
  interval = NULL,
  shift.by = NULL,
  allow_gaps = FALSE,
  tz = "GMT",
  storage.mode = "integer",
  ...
)
}
\arguments{
\item{x}{A character vector containing date-time information to be converted
to class \code{"POSIXct"}.}

\item{format}{A character string. The default \code{format} is
\code{"\%Y-\%m-\%d \%H:\%M"}}

\item{interval}{A numeric value specifying the time interval (in seconds)
valid for all values of the input date-time vector. If \code{NULL} (default),
\code{interval} is inferred from the data (see Details).}

\item{shift.by}{A numeric value specifying the time shift (in seconds) to be
applied to the date-time information.}

\item{allow_gaps}{A logical value. If \code{TRUE}, date-time information does
not have to be regular but time differences must be multiples of
\code{interval}.}

\item{tz}{A time zone (see \link{time zones}) specification to be used
for the conversion.}

\item{storage.mode}{A character string. Either \code{"integer"} (default) or
\code{"double"} (see Details).}

\item{...}{Further arguments to be passed from or to other methods.}
}
\value{
A \code{"POSIXct"} vector with assigned attributes \code{varnames} and \code{units}
specified as \code{"timestamp"} and \code{"-"}, respectively.
}
\description{
Converts character vector to class \code{"POSIXct"} using
\code{\link[=strptime]{strptime()}} and validates the result. The input has to represent an
ascending or descending regular date-time sequence with given time interval.
}
\details{
Eddy covariance related measurements are usually stored with a timestamp
representing the end of the averaging period (typically 1800 s) in standard
time. This can however cause difficulties during data aggregation or
plotting. Therefore it is recommended to shift the date-time information
using \code{shift.by} to represent the center of averaging period prior to
any computations. It is also recommended to change the date-time information
to its original state before saving to a file (see Examples section).

Any unsuccessful attempt to convert date-time information is considered to be
unexpected behavior and returns an error message instead of \code{NA} value.
In case that multiple formats are present in the timestamp, it has to be
corrected prior using \code{strptime_eddy()}. It is expected that time series
are continuous even if no valid measurements are available for given time
interval. Therefore \code{interval} value is checked against the lagged
differences (\code{\link[=diff]{diff()}}) applied to the converted date-time vector
and returns an error message if mismatch is found. If \code{allow_gaps = TRUE}, date-time information does not have to be regular but time differences
must be multiples of \code{interval}.

If \code{interval = NULL}, automated recognition of \code{interval} is applied. This is
preferred to setting \code{interval} value manually. Only in rare cases when
\code{allow_gaps = TRUE} and original time interval is not present in \code{x}, it is
not possible to infer the original time interval. Even in that case,
\code{strptime_eddy()} will execute successfully. The inferred interval represents
the shortest time interval present among \code{x} records.

The default \code{\link{storage.mode}} of returned \code{"POSIXct"} vector is set to be
\code{"integer"} instead of \code{"double"}. This simplifies the application of
\code{\link[=round_df]{round_df()}} (it avoids rounding) but could lead to an unexpected behavior
if the date-time information is expected to resolve fractional seconds (it
\code{\link[=trunc]{trunc()}}ates decimals).
}
\examples{
xx <- c("01.01.2014  00:30:00", "01.01.2014  01:00:00",
"01.01.2014  01:30:00", "01.01.2014  02:00:00")
varnames(xx) <- "timestamp"
units(xx) <- "-"
str(xx)
(yy <- strptime_eddy(xx, "\%d.\%m.\%Y \%H:\%M", shift.by = -900L))
attributes(yy)
typeof(yy)

## Convert to original format
format(yy + 900, format = "\%d.\%m.\%Y \%H:\%M", tz = "GMT")
zz <- xx[-3]
strptime_eddy(zz, "\%d.\%m.\%Y \%H:\%M", allow_gaps = TRUE)

## This is not a regular date-time sequence
try(strptime_eddy(zz, "\%d.\%m.\%Y \%H:\%M")) # error returned
## interval argument provided incorrectly
try(strptime_eddy(xx, "\%d.\%m.\%Y \%H:\%M", interval = 3600)) # error returned

}
\seealso{
\code{\link[=strptime]{strptime()}} provides the details about conversions
between date-time character representation and \code{"POSIXct"} or
\code{"POSIXlt"} classes. It also includes information about \code{format}
\emph{conversion specification}.

\link{DateTimeClasses} further inform about the date-time classes.

See \link{locales} to query or set a locale.
}
